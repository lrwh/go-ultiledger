// Code generated by protoc-gen-go. DO NOT EDIT.
// source: offer.proto

package ultpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Price struct {
	Numerator   int64 `protobuf:"varint,1,opt,name=Numerator" json:"Numerator,omitempty"`
	Denominator int64 `protobuf:"varint,2,opt,name=Denominator" json:"Denominator,omitempty"`
}

func (m *Price) Reset()                    { *m = Price{} }
func (m *Price) String() string            { return proto.CompactTextString(m) }
func (*Price) ProtoMessage()               {}
func (*Price) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Price) GetNumerator() int64 {
	if m != nil {
		return m.Numerator
	}
	return 0
}

func (m *Price) GetDenominator() int64 {
	if m != nil {
		return m.Denominator
	}
	return 0
}

type Offer struct {
	// seller of the offer
	AccountID string `protobuf:"bytes,1,opt,name=AccountID" json:"AccountID,omitempty"`
	// ID of the offer
	OfferID string `protobuf:"bytes,2,opt,name=OfferID" json:"OfferID,omitempty"`
	// asset for selling
	SellAsset *Asset `protobuf:"bytes,3,opt,name=SellAsset" json:"SellAsset,omitempty"`
	// asset for buying
	BuyAsset *Asset `protobuf:"bytes,4,opt,name=BuyAsset" json:"BuyAsset,omitempty"`
	// amount of asset for selling
	Amount int64 `protobuf:"varint,5,opt,name=Amount" json:"Amount,omitempty"`
	// price of the selling asset in terms of buying asset
	Price *Price `protobuf:"bytes,6,opt,name=Price" json:"Price,omitempty"`
	// passive offer?
	Passive int32 `protobuf:"varint,7,opt,name=Passive" json:"Passive,omitempty"`
}

func (m *Offer) Reset()                    { *m = Offer{} }
func (m *Offer) String() string            { return proto.CompactTextString(m) }
func (*Offer) ProtoMessage()               {}
func (*Offer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *Offer) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *Offer) GetOfferID() string {
	if m != nil {
		return m.OfferID
	}
	return ""
}

func (m *Offer) GetSellAsset() *Asset {
	if m != nil {
		return m.SellAsset
	}
	return nil
}

func (m *Offer) GetBuyAsset() *Asset {
	if m != nil {
		return m.BuyAsset
	}
	return nil
}

func (m *Offer) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Offer) GetPrice() *Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Offer) GetPassive() int32 {
	if m != nil {
		return m.Passive
	}
	return 0
}

func init() {
	proto.RegisterType((*Price)(nil), "ultpb.Price")
	proto.RegisterType((*Offer)(nil), "ultpb.Offer")
}

func init() { proto.RegisterFile("offer.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x89, 0x6b, 0x5a, 0x3b, 0xf5, 0x34, 0x07, 0x09, 0xe2, 0x21, 0xf4, 0x14, 0x3c, 0xf4,
	0xa0, 0x4f, 0x50, 0x29, 0xc8, 0x5e, 0x74, 0x89, 0x4f, 0xd0, 0x2d, 0x59, 0x28, 0xb4, 0xcd, 0x92,
	0x3f, 0x82, 0xcf, 0xec, 0x4b, 0x48, 0x66, 0xbb, 0x56, 0x61, 0x8f, 0xf3, 0xfb, 0xbe, 0x7c, 0xf3,
	0x65, 0xa0, 0xb4, 0x87, 0x83, 0x71, 0xf5, 0xd1, 0xd9, 0x60, 0x91, 0xc7, 0x31, 0x1c, 0xf7, 0xf7,
	0x65, 0xe7, 0xbd, 0x09, 0x27, 0x56, 0xbd, 0x02, 0xdf, 0xb9, 0xa1, 0x37, 0xf8, 0x00, 0xc5, 0x5b,
	0x9c, 0x8c, 0xeb, 0x82, 0x75, 0x82, 0x49, 0xa6, 0x36, 0x7a, 0x05, 0x28, 0xa1, 0x6c, 0xcd, 0x6c,
	0xa7, 0x61, 0x26, 0xfd, 0x8a, 0xf4, 0xbf, 0xa8, 0xfa, 0x66, 0xc0, 0xdf, 0xd3, 0xb2, 0x94, 0xd4,
	0xf4, 0xbd, 0x8d, 0x73, 0xd8, 0xb6, 0x94, 0x54, 0xe8, 0x15, 0xa0, 0x80, 0x9c, 0x6c, 0xdb, 0x96,
	0x52, 0x0a, 0x7d, 0x1e, 0xf1, 0x11, 0x8a, 0x0f, 0x33, 0x8e, 0x4d, 0x6a, 0x27, 0x36, 0x92, 0xa9,
	0xf2, 0xe9, 0xb6, 0xa6, 0xca, 0x35, 0x31, 0xbd, 0xca, 0xa8, 0xe0, 0xe6, 0x25, 0x7e, 0x9d, 0xac,
	0xd7, 0x17, 0xac, 0xbf, 0x2a, 0xde, 0x41, 0xd6, 0x4c, 0x69, 0xb7, 0xe0, 0x54, 0x7a, 0x99, 0xb0,
	0x5a, 0x3e, 0x2e, 0xb2, 0x7f, 0xcf, 0x89, 0xe9, 0xe5, 0x26, 0x02, 0xf2, 0x5d, 0xe7, 0xfd, 0xf0,
	0x69, 0x44, 0x2e, 0x99, 0xe2, 0xfa, 0x3c, 0xee, 0x33, 0xba, 0xde, 0xf3, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xb8, 0x65, 0xa0, 0xb1, 0x60, 0x01, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asset.proto

package ultpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Enumeration of asset types.
type AssetType int32

const (
	// The native asset of Ultiledger network is ULT,
	// and the smallest unit of ULT is ULU.
	AssetType_NATIVE AssetType = 0
	AssetType_CUSTOM AssetType = 1
)

var AssetType_name = map[int32]string{
	0: "NATIVE",
	1: "CUSTOM",
}
var AssetType_value = map[string]int32{
	"NATIVE": 0,
	"CUSTOM": 1,
}

func (x AssetType) String() string {
	return proto.EnumName(AssetType_name, int32(x))
}
func (AssetType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Asset struct {
	AssetType AssetType `protobuf:"varint,1,opt,name=AssetType,enum=ultpb.AssetType" json:"AssetType,omitempty"`
	// User defined asset name. The length of the
	// name should not be more than four.
	AssetName string `protobuf:"bytes,2,opt,name=AssetName" json:"AssetName,omitempty"`
	// The issuer account of the asset.
	Issuer string `protobuf:"bytes,3,opt,name=Issuer" json:"Issuer,omitempty"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Asset) GetAssetType() AssetType {
	if m != nil {
		return m.AssetType
	}
	return AssetType_NATIVE
}

func (m *Asset) GetAssetName() string {
	if m != nil {
		return m.AssetName
	}
	return ""
}

func (m *Asset) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func init() {
	proto.RegisterType((*Asset)(nil), "ultpb.Asset")
	proto.RegisterEnum("ultpb.AssetType", AssetType_name, AssetType_value)
}

func init() { proto.RegisterFile("asset.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2c, 0x2e, 0x4e,
	0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0xcd, 0x29, 0x29, 0x48, 0x52, 0xca,
	0xe5, 0x62, 0x75, 0x04, 0x89, 0x0a, 0xe9, 0x71, 0x71, 0x82, 0x19, 0x21, 0x95, 0x05, 0xa9, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0x02, 0x7a, 0x60, 0x35, 0x7a, 0x70, 0xf1, 0x20, 0x84, 0x12,
	0x21, 0x19, 0xa8, 0x7a, 0xbf, 0xc4, 0xdc, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x84,
	0x80, 0x90, 0x18, 0x17, 0x9b, 0x67, 0x71, 0x71, 0x69, 0x6a, 0x91, 0x04, 0x33, 0x58, 0x0a, 0xca,
	0xd3, 0x52, 0x46, 0xb2, 0x45, 0x88, 0x8b, 0x8b, 0xcd, 0xcf, 0x31, 0xc4, 0x33, 0xcc, 0x55, 0x80,
	0x01, 0xc4, 0x76, 0x0e, 0x0d, 0x0e, 0xf1, 0xf7, 0x15, 0x60, 0x4c, 0x62, 0x03, 0xbb, 0xd0, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x23, 0x21, 0x15, 0xb0, 0x00, 0x00, 0x00,
}

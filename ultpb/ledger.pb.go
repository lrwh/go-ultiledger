// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ledger.proto

package ultpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LedgerHeader struct {
	// version of pb message, each time we update the pb message definition, the
	// version number will incremented. The specific version number to use is
	// hard coded and changed each time we do some changes.
	Version uint32 `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	// hash of the previous ledger
	PrevLedgerHash string `protobuf:"bytes,2,opt,name=PrevLedgerHash" json:"PrevLedgerHash,omitempty"`
	// hash of the transaction list in this ledger
	TxListHash string `protobuf:"bytes,3,opt,name=TxListHash" json:"TxListHash,omitempty"`
	// sequence number of this ledger
	SeqNum uint64 `protobuf:"varint,4,opt,name=SeqNum" json:"SeqNum,omitempty"`
}

func (m *LedgerHeader) Reset()                    { *m = LedgerHeader{} }
func (m *LedgerHeader) String() string            { return proto.CompactTextString(m) }
func (*LedgerHeader) ProtoMessage()               {}
func (*LedgerHeader) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *LedgerHeader) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *LedgerHeader) GetPrevLedgerHash() string {
	if m != nil {
		return m.PrevLedgerHash
	}
	return ""
}

func (m *LedgerHeader) GetTxListHash() string {
	if m != nil {
		return m.TxListHash
	}
	return ""
}

func (m *LedgerHeader) GetSeqNum() uint64 {
	if m != nil {
		return m.SeqNum
	}
	return 0
}

func init() {
	proto.RegisterType((*LedgerHeader)(nil), "ultpb.LedgerHeader")
}

func init() { proto.RegisterFile("ledger.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x49, 0x4d, 0x49,
	0x4f, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0xcd, 0x29, 0x29, 0x48, 0x52,
	0xea, 0x60, 0xe4, 0xe2, 0xf1, 0x01, 0x8b, 0x7b, 0xa4, 0x26, 0xa6, 0xa4, 0x16, 0x09, 0x49, 0x70,
	0xb1, 0x87, 0xa5, 0x16, 0x15, 0x67, 0xe6, 0xe7, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x06, 0xc1,
	0xb8, 0x42, 0x6a, 0x5c, 0x7c, 0x01, 0x45, 0xa9, 0x65, 0x50, 0xd5, 0x89, 0xc5, 0x19, 0x12, 0x4c,
	0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x68, 0xa2, 0x42, 0x72, 0x5c, 0x5c, 0x21, 0x15, 0x3e, 0x99, 0xc5,
	0x25, 0x60, 0x35, 0xcc, 0x60, 0x35, 0x48, 0x22, 0x42, 0x62, 0x5c, 0x6c, 0xc1, 0xa9, 0x85, 0x7e,
	0xa5, 0xb9, 0x12, 0x2c, 0x0a, 0x8c, 0x1a, 0x2c, 0x41, 0x50, 0x5e, 0x12, 0x1b, 0xd8, 0x61, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x0f, 0x37, 0x2a, 0xa8, 0x00, 0x00, 0x00,
}

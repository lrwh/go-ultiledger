// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

/*
Package ultpb is a generated protocol buffer package.

It is generated from these files:
	account.proto
	asset.proto
	consensus.proto
	ledger.proto
	liability.proto
	offer.proto
	transaction.proto
	trust.proto

It has these top-level messages:
	Account
	Asset
	ConsensusValue
	Quorum
	Nominate
	Ballot
	Prepare
	Confirm
	Externalize
	Statement
	LedgerHeader
	Ledger
	LedgerCheckpoint
	Liability
	Price
	Offer
	Op
	Tx
	TxSet
	CreateAccountOp
	PaymentOp
	PathPaymentOp
	TrustOp
	AllowTrustOp
	OfferOp
	Trust
*/
package ultpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	// public key of this account
	AccountID string `protobuf:"bytes,1,opt,name=AccountID" json:"AccountID,omitempty"`
	// balance in ULUs
	Balance int64 `protobuf:"varint,2,opt,name=Balance" json:"Balance,omitempty"`
	// public key of the signer of this account
	Signer string `protobuf:"bytes,3,opt,name=Signer" json:"Signer,omitempty"`
	// latest transaction sequence number
	SeqNum uint64 `protobuf:"varint,4,opt,name=SeqNum" json:"SeqNum,omitempty"`
	// number of entries belong to this account
	EntryCount int32 `protobuf:"varint,5,opt,name=EntryCount" json:"EntryCount,omitempty"`
	// ULTkeys of transactions belongs to this account
	TxKeyList []string `protobuf:"bytes,6,rep,name=TxKeyList" json:"TxKeyList,omitempty"`
	// liability of native asset
	Liability *Liability `protobuf:"bytes,7,opt,name=Liability" json:"Liability,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *Account) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

func (m *Account) GetSeqNum() uint64 {
	if m != nil {
		return m.SeqNum
	}
	return 0
}

func (m *Account) GetEntryCount() int32 {
	if m != nil {
		return m.EntryCount
	}
	return 0
}

func (m *Account) GetTxKeyList() []string {
	if m != nil {
		return m.TxKeyList
	}
	return nil
}

func (m *Account) GetLiability() *Liability {
	if m != nil {
		return m.Liability
	}
	return nil
}

func init() {
	proto.RegisterType((*Account)(nil), "ultpb.Account")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0xcd, 0x29, 0x29, 0x48,
	0x92, 0xe2, 0xcf, 0xc9, 0x4c, 0x4c, 0xca, 0xcc, 0xc9, 0x2c, 0xa9, 0x84, 0x88, 0x2b, 0xdd, 0x67,
	0xe4, 0x62, 0x77, 0x84, 0xa8, 0x14, 0x92, 0xe1, 0xe2, 0x84, 0x32, 0x3d, 0x5d, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x10, 0x02, 0x42, 0x12, 0x5c, 0xec, 0x4e, 0x89, 0x39, 0x89, 0x79, 0xc9,
	0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x30, 0xae, 0x90, 0x18, 0x17, 0x5b, 0x70, 0x66,
	0x7a, 0x5e, 0x6a, 0x91, 0x04, 0x33, 0x58, 0x13, 0x94, 0x07, 0x16, 0x4f, 0x2d, 0xf4, 0x2b, 0xcd,
	0x95, 0x60, 0x51, 0x60, 0xd4, 0x60, 0x09, 0x82, 0xf2, 0x84, 0xe4, 0xb8, 0xb8, 0x5c, 0xf3, 0x4a,
	0x8a, 0x2a, 0x9d, 0x41, 0x26, 0x4b, 0xb0, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x21, 0x89, 0x80, 0xdc,
	0x11, 0x52, 0xe1, 0x9d, 0x5a, 0xe9, 0x93, 0x59, 0x5c, 0x22, 0xc1, 0xa6, 0xc0, 0x0c, 0x72, 0x07,
	0x5c, 0x40, 0x48, 0x8f, 0x8b, 0xd3, 0x07, 0xe6, 0x09, 0x09, 0x76, 0x05, 0x46, 0x0d, 0x6e, 0x23,
	0x01, 0x3d, 0xb0, 0xef, 0xf4, 0xe0, 0xe2, 0x41, 0x08, 0x25, 0x49, 0x6c, 0x60, 0x8f, 0x1a, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x41, 0xc1, 0xe6, 0x68, 0x11, 0x01, 0x00, 0x00,
}
